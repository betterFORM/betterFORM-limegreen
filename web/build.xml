<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!--
    author: Joern Turner
    author: Lars Windauer
 -->
<project id="web" name="betterForm Web" default="deploy" basedir=".">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value=".."/>
    <property name="resource.module.dir" value="../resource"/>
    <property name="resource.src.dir" value="${resource.module.dir}/src"/>
    <property name="core.dir" value="../core"/>
    <property name="web.dir" value="."/>
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>


    <!-- local Web properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="src.webapp.dir" value="${basedir}/src/main/webapp"/>
    <property name="src.webinf.dir" value="${src.webapp.dir}/WEB-INF"/>
    <property name="target" value="${basedir}/target"/>
    <property name="webapp.dir" value="${target}/${web.app.name}"/>
    <!--<property name="resources.dir" value="${webapp.dir}/resources"/>-->
    <property name="resources.dir" value="${webapp.dir}/WEB-INF/classes/META-INF/resources"/>
    <property name="targetname" value="${target}/${web.app.name}-${web.app.version}"/>

    <antversion property="antversion" atleast="${properties.antversion}"/>
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo>
        ************************************************************************************
        cleaning up web...
        ************************************************************************************
        </echo>
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process" depends="check-ant-version" if="antversion">
        <echo>
        ************************************************************************************
        copying Core classes...
        ************************************************************************************
        </echo>

        <tstamp/>
        <mkdir dir="${target}/classes"/>

        <ant antfile="build.xml" target="compile" dir="${core.dir}" inheritall="true"/>

        <copy todir="${target}/classes">
            <fileset dir="${core.dir}/target/classes"/>
        </copy>
    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change relevant properties in build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

        javac.debug=off
        javac.deprecation=off
        javac.optimize=on

    -->

    <target name="compile" depends="prepare" description="compile all web sources">
        <echo>
        ************************************************************************************
        compiling Web classes...
        ************************************************************************************
        JavaOptions:
            version:     ${properties.javac.version}
            debug:       ${properties.javac.debug}
            deprecation: ${properties.javac.deprecation}
            optimize:    ${properties.javac.optimize}

        ************************************************************************************
        </echo>

        <javac description="compile source files"
               srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="web.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"
               includeantruntime="false"
               nowarn="true"
                />
    </target>

    <target name="create-single-jar"
            description="creates a single jar for all classes and resources">

        <!--<antcall target="create-jar"/>-->
        <antcall target="compile"/>

        <echo>
        ************************************************************************************
        copy resources to META-INF/resources
        ************************************************************************************
        </echo>
        <copy todir="${target}/classes/META-INF/resources">
            <fileset dir="${resource.src.dir}/main/resources" includes="**/*" excludes="scripts/**" />
        </copy>

<!--
        <copy todir="${target}/classes/META-INF/resources/scripts/betterform/editor/">
            <fileset file="${resource.src.dir}/main/resources/scripts/betterform/editor/addMenu.js"/>
        </copy>
-->

        <!--delete the script folder - did not find a solution to exclude these in the copy above -->
        <!--<delete dir="${basedir}/target/classes/META-INF/resources/scripts"/>-->

        <!-- recreate script folder -->
        <!--<mkdir dir="${basedir}/target/classes/META-INF/resources/scripts/release"/>-->


        <echo>
        ************************************************************************************
        unpacking optimized javascript library
        ************************************************************************************
        </echo>
        <unzip src="${resource.src.dir}/main/lib/betterform-js-optimized.zip"
               dest="${target}/classes/META-INF/resources/scripts"/>
        <echo>
        ************************************************************************************
        compressing classes plus resources into a single jar
        ************************************************************************************
        </echo>
        <jar basedir="${target}/classes" compress="true" jarfile="${target}/betterform.jar" update="true" excludes="**/ehcache.xml"/>

        <echo>
            ************************************************************************************
            copying jar to WEB-INF/lib
            ************************************************************************************
        </echo>
        <!--<copy todir="${webapp.dir}/WEB-INF/lib" file="${web.dir}/target/betterform.jar"/>-->

        <echo>
            ************************************************************************************
            deleting exploded classes folder to avoid conflicts
            ************************************************************************************
        </echo>
        <!--<delete dir="${webapp.dir}/WEB-INF/classes"/>-->



    </target>

    <target name="package" depends="deploy, deploy-forms" description="create js optimized war file">
        <antcall target="create-war"/>
    </target>

    <target name="create-war" description="create a betterFORM web application archive">
        <echo>
        ************************************************************************************
        creating war-file...
        ************************************************************************************
        </echo>

        <war warfile="${targetname}.war"
             webxml="${webapp.dir}/WEB-INF/web.xml"
             basedir="${webapp.dir}">
        </war>
    </target>


    <target name="exploded-webapp-base"
            description="deployment for new resource loading">
        <echo>
        ************************************************************************************
                                unoptimized DEVELOPMENT deployment
        ************************************************************************************
        ************************************************************************************
        build deployment structure (exploded war) - creates bare-bone structure of webapp with:
        - dashboard.html (should be moved to resources too)
        - blank.html (needed by Dojo loader)
        - jsp folder (should be eliminated)
        - an empty upload dir (preconfigured directory)
        - WEB-INF with config-files

        This target explicitly does not handle:
            - global resources including JavaScript
            - betterFORM Java classes
            - copying of libs betterFORM depends on

        These must be handled by target depending on this.
        ************************************************************************************
        </echo>

        <!-- Filters for log4j.xml see build.properties.xml for a description-->
        <filter token="APPENDER" value="${config.log4j.appender}"/>
        <filter token="ROOT_LOG_LEVEL" value="${config.log4j.loglevel.root}"/>
        <filter token="BETTERFORM_LOG_LEVEL" value="${config.log4j.loglevel.betterform}"/>
        <filter token="EHCACHE_LOG_LEVEL" value="${config.log4j.loglevel.ehcache}"/>
        <filter token="DWR_LOG_LEVEL" value="${config.log4j.loglevel.dwr}"/>

        <copy description="filter log4j.xml"
              tofile="${src.webinf.dir}/log4j.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/log4j.template.xml">

        </copy>

        <!-- Filters for web.xml see build.properties.xml for a description-->
        <filter token="CACHING" value="${config.webinf.caching}"/>
        <filter token="DWR_DEBUG" value="${config.webinf.debugDWR}"/>
        <copy description="filter web.xml"
              tofile="${src.webinf.dir}/web.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/web.template.xml">

        </copy>

        <!-- Filters for betterform.config see build.properties.xml for a description-->
        <filter token="INIT_LOGGING" value="${config.bfconfig.initLogging}"/>
        <filter token="DEFAULT_ALERT" value="${config.bfconfig.generateDefaultAlerts}"/>
        <filter token="DEBUG_COMPONENTS" value="${config.bfconfig.debugComponents}"/>
        <filter token="EVENT_OPTIMIZATION" value="${config.bfconfig.enableEventOptimization}"/>
        <filter token="INCLUDES" value="${config.bfconfig.doIncludes}"/>
        <filter token="MAIL_ADMIN" value="${config.bfconfig.mailadmin}"/>
        <copy description="filter betterform-config.xml"
              tofile="${src.webinf.dir}/betterform-config.xml"
              overwrite="true"
              filtering="true"
              file="${src.webinf.dir}/betterform-config.template.xml">

        </copy>

        <!-- copy version.info to betterform-version.config -->
        <filter token="app.name" value="${web.app.name}"/>
        <filter token="app.version" value="${web.app.version}"/>
        <tstamp>
            <format property="current.time"
                    pattern="yyyy-MM-dd HH:mm:ss"
                    unit="millisecond"/>
        </tstamp>
        <filter token="timestamp" value="${current.time}"/>

        <copy tofile="${src.webinf.dir}/betterform-version.info"
              file="${core.dir}/src/main/java/version.info"
              filtering="true"
              overwrite="true"/>

        <!--TODO: URGENT: webapp dir should be urgently be cleaned up!!!! -->
        <copy description="copy WEB-INF dir"
              todir="${webapp.dir}"
              overwrite="true"
              filtering="true">
            <fileset dir="${src.webapp.dir}">
                <exclude name="WEB-INF/*.template.xml"/>
                <exclude name="META-INF/context.xml"/>
            </fileset>
        </copy>


        <mkdir dir="${webapp.dir}/resources"/>
        <copy description="copy resources dir"
              todir="${webapp.dir}/resources"
              file="${resource.src.dir}/main/resources/images/blank.gif"/>
    </target>

    <target name="copy-libs" unless="should.not.copy.libs">
        <echo>
        ************************************************************************************
        copying libs betterFORM is dependent on (core + web) ...
        ************************************************************************************
        </echo>
        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Core">
            <fileset dir="${core.dir}/src/main/lib" excludes="**/betterform-core"/>
        </copy>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Web" flatten="true">

            <!-- todo: need a better solution here - not all libs form web/src/main/lib are runtime relevant.
                Therefore only needed libs are copied directly here.
			-->
            <fileset dir="${basedir}/src/main/lib" excludes="**/${core.app.name}-${core.app.version}.jar">
                <include name="**/dwr*"/>
            </fileset>
        </copy>
    </target>

    <target name="deploy-exploded"
            depends="exploded-webapp-base"
            description="deploys classes and resources tree to WEB-INF/classes">

        <antcall target="compile"/>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="moving betterFORM classes to WEB-INF/classes"/>

        <antcall target="copy-libs"/>

        <echo>
        ************************************************************************************
        deploying classes + resources tree to WEB-INF/classes (developer mode)
        ************************************************************************************
        </echo>

        <antcall target="copy-src-resources"/>
        <ant antfile="${resource.module.dir}/build-dojo.xml" target="prepare-dojo" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>

        <ant antfile="${resource.module.dir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>
    </target>

    <target name="deploy-exploded-resources" description="only deployes resources in resources/src/main/resources">

        <echo>
        ************************************************************************************
        deploying classes + resources tree to WEB-INF/classes (developer mode)
        ************************************************************************************
        </echo>
        <antcall target="copy-src-resources"/>
        <ant antfile="${resource.module.dir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>
    </target>


    <target name="deploy" depends="compile, exploded-webapp-base, create-single-jar" description="default deployment as single jar">
        <echo>
        ************************************************************************************
                                optimized PRODUCUTION deployment
        ************************************************************************************
        </echo>

        <!-- todo: integrate with one-jar -->
        <antcall target="copy-libs"/>
        <echo>
        ************************************************************************************
        copying betterform.jar to WEB-INF/lib
        ************************************************************************************
        </echo>
        <copy todir="${webapp.dir}/WEB-INF/lib" file="${target}/betterform.jar"/>
        <copy todir="${webapp.dir}/WEB-INF/classes" file="${target}/classes/ehcache.xml"/>
    </target>

    <target name="deploy-forms" description="deploy the forms to target">
        <echo>
        ************************************************************************************
        copying forms to target...
        ************************************************************************************
        </echo>

        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${resource.module.dir}/src/main/xforms" excludes="**/TimeTracker.xhtml"/>
        </copy>
    </target>

    <target name="copy-src-resources">
        <echo>
        ************************************************************************************
        copying global resources (CSS, styles, XSLT ... (excluding scripts)
        ************************************************************************************
        </echo>

         <copy description="copy resources from global 'src' directory"
              todir="${resources.dir}"
              includeemptydirs="true">
            <fileset dir="${resource.src.dir}/main/resources">
                <exclude name="**/scripts/**"/>
            </fileset>
        </copy>

        <ant antfile="${resource.module.dir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts/dojo"/>
        </ant>
    </target>

    <target name="check-ant-version" unless="antversion">
        <echo>Apache Ant ${properties.antversion} or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.7 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</echo>
    </target>

    <target name="deploy-test-resources" description="copy all official XForms test suite files to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}">
            <fileset dir="../resource/src/test/resources"/>
        </copy>
    </target>

    <!-- TODO cleanup -->
    <target name="deploy-webdriver-test-resources" description="copy all official XForms test suite files to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}" overwrite="true">
            <fileset dir="${basedir}/src/test/resources/testsuite/xhtml"/>
        </copy>
    </target>

    <target name="doc" depends="compile" description="generate documentation">
        <!--create deploy directory-->
        <mkdir dir="${basedir}/target/doc"/>

        <!--generate source code documentation-->
        <javadoc description="generate api documentation"
                 sourcepath="${basedir}/src/main/java"
                 destdir="${basedir}/target/doc"
                 classpathref="compile.class.path"
                 packagenames="de.betterform.*">
        </javadoc>
    </target>

</project>
